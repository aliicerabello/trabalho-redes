# -*- coding: utf-8 -*-
"""erdos_renyi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c9Eh6y7rXRCTpaHn2KgNG0X2pu4ViSak
"""

import random
import matplotlib.pyplot as plt
import networkx as nx

def erdos_renyi(n, p):

  # grafo vazio
  G = nx.Graph()
  G.add_nodes_from(range(n))  # nós de 0 até n-1

  # percorre todos os pares (i, j) com i < j
  for i in range(n):
      for j in range(i+1, n):
          if random.random() < p:
              G.add_edge(i, j)

  # desenha o grafo
  nx.draw(
      G,
      with_labels=True,
      node_color='pink',
      edge_color='black',
      node_size=100,
      font_size=8
  )
  plt.title(f"Erdos–Rényi: n={n}, p={p}")
  plt.show()
  graus = [grau for _, grau in G.degree()]
  plt.hist(graus, bins=range(min(graus), max(graus)+2), align='left', color='skyblue', edgecolor='black')
  plt.title(f"Distribuição de graus — Erdős–Rényi (n={n}, p={p})")
  plt.xlabel("Grau do nó")
  plt.ylabel("Número de nós")
  plt.grid(True)
  plt.show()

  print("Número de componentes conexas:", nx.number_connected_components(G))
  print("Diâmetro (se conexo):", nx.diameter(G) if nx.is_connected(G) else "grafo desconexo")
  print(f"Grau médio: {sum(graus)/len(graus):.2f}")
  print(f"Coeficiente de clustering médio: {nx.average_clustering(G):.2f}")
  print(f"Densidade: {nx.density(G):.2f}")


erdos_renyi(25, 0.6)