# -*- coding: utf-8 -*-
"""redes_item2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XdSVKCTkuh0JiYXWUR6-2NqrfbGRutvq
"""

from google.colab import files
uploaded = files.upload()
import pandas as pd
import networkx as nx

def carregar_arestas_do_excel(nome_aba):
    df = pd.read_excel("redes.xlsx", sheet_name=nome_aba)
    return list(df[['source', 'target']].itertuples(index=False, name=None))

def analisar_rede(arestas, nome_rede="Rede", nos_interesse=[1, 2, 5, 9, 17]):
    G = nx.Graph()
    G.add_edges_from(arestas)

    closeness = nx.closeness_centrality(G)
    betweenness = nx.betweenness_centrality(G)
    pagerank = nx.pagerank(G)

    dados = []
    for no in G.nodes():
        dados.append({
            "nó": no,
            "grau": G.degree[no],
            "closeness": round(closeness[no], 4),
            "betweenness": round(betweenness[no], 4),
            "pagerank": round(pagerank[no], 4),
            "selecionado": no in nos_interesse
        })

    df = pd.DataFrame(dados).sort_values(by="pagerank", ascending=False).reset_index(drop=True)

    print(f"\n Métricas para {nome_rede}:")
    display(df)

    print("\n Descrição dos nós de interesse:")
    for no in nos_interesse:
        linha = df[df["nó"] == no]
        if not linha.empty:
            idx = int(linha.index[0]) + 1
            print(f"nó {no}: grau {linha['grau'].values[0]}, closeness {linha['closeness'].values[0]}, "
                  f"betweenness {linha['betweenness'].values[0]}, pagerank {linha['pagerank'].values[0]} "
                  f"(posição {idx} no ranking de PageRank).")
        else:
            print(f"nó {no}: não encontrado na rede.")

    return df

arestas_a = carregar_arestas_do_excel("arestas rede-a")
arestas_b = carregar_arestas_do_excel("arestas rede-b")
arestas_c = carregar_arestas_do_excel("arestas rede-c")
arestas_d = carregar_arestas_do_excel("arestas rede-d")

df_a = analisar_rede(arestas_a, "Rede A")
df_b = analisar_rede(arestas_b, "Rede B")
df_c = analisar_rede(arestas_c, "Rede C")
df_d = analisar_rede(arestas_d, "Rede D")